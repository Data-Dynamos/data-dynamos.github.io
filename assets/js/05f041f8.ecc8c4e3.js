"use strict";(self.webpackChunkdata_dynamos_github_io=self.webpackChunkdata_dynamos_github_io||[]).push([[4022],{3905:(e,t,n)=>{n.d(t,{Zo:()=>s,kt:()=>f});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var p=a.createContext({}),d=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},s=function(e){var t=d(e.components);return a.createElement(p.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,p=e.parentName,s=l(e,["components","mdxType","originalType","parentName"]),u=d(n),c=o,f=u["".concat(p,".").concat(c)]||u[c]||m[c]||r;return n?a.createElement(f,i(i({ref:t},s),{},{components:n})):a.createElement(f,i({ref:t},s))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=c;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var d=2;d<r;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},2745:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>m,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var a=n(7462),o=(n(7294),n(3905));const r={sidebar_position:2},i="Data Build Tool:Installation and Configuration Guide",l={unversionedId:"data-transformation/data-build-tool/dbt-local-setup",id:"data-transformation/data-build-tool/dbt-local-setup",title:"Data Build Tool:Installation and Configuration Guide",description:"Here are the instructions to set up dbt locally:",source:"@site/docs/data-transformation/data-build-tool/dbt-local-setup.mdx",sourceDirName:"data-transformation/data-build-tool",slug:"/data-transformation/data-build-tool/dbt-local-setup",permalink:"/docs/data-transformation/data-build-tool/dbt-local-setup",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/data-transformation/data-build-tool/dbt-local-setup.mdx",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction Data Build Tool",permalink:"/docs/data-transformation/data-build-tool/Introduction-data-build-tool"},next:{title:"What are dbt models ?",permalink:"/docs/data-transformation/data-build-tool/what-dbt-model"}},p={},d=[],s={toc:d},u="wrapper";function m(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"data-build-toolinstallation-and-configuration-guide"},"Data Build Tool:Installation and Configuration Guide"),(0,o.kt)("p",null,"Here are the instructions to set up dbt locally:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Install Python"),": Refer Python website (",(0,o.kt)("a",{parentName:"p",href:"https://www.python.org"},"https://www.python.org"),") to install python for your operating system. Make sure you have installed Python version 3.9 or higher to compatibile with dbt.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Open a terminal or command prompt: Launch a terminal or command prompt on your machine.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},'Create a virtual environment: Run the following command to create a new virtual environment named "myenv":'),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"python -m venv myenv\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Activate the virtual environment: Depending on your operating system, run the appropriate command to activate the virtual environment:"))),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"For ",(0,o.kt)("strong",{parentName:"p"},"Windows"),":"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"myenv\\Scripts\\activate\n"))),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},"For ",(0,o.kt)("strong",{parentName:"p"},"macOS/Linux"),":"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"source myenv/bin/activate\n")))),(0,o.kt)("ol",{start:5},(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Install dbt packages"),": Open your terminal or command prompt and run the following command to install the necessary dbt packages:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"pip install dbt-core\n")),(0,o.kt)("p",{parentName:"li"},"This command installs the core dbt package and additional packages specific to your database engine (e.g., dbt-postgres for PostgreSQL, dbt-snowflake for Snowflake)."),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"pip install dbt-snowflake\n"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Verify dbt installation"),": To ensure dbt is installed correctly, run the following command in your terminal:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"dbt --version\n")),(0,o.kt)("p",{parentName:"li"},"You should see the dbt version displayed, indicating that dbt is successfully installed.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Initialize a dbt project"),": Create a new directory for your dbt project and navigate into it. Then, run the following command to initialize a new dbt project:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"dbt init project_name\n")),(0,o.kt)("p",{parentName:"li"},"Replace ",(0,o.kt)("inlineCode",{parentName:"p"},"project_name")," with the desired name for your project. This command sets up the basic structure and configuration files for your dbt project.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Configure dbt project"),": Open the ",(0,o.kt)("inlineCode",{parentName:"p"},"dbt_project.yml")," file in your project directory and update the following values:"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"name"),": Set the name of your project."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"profile"),": Set the profile name to use for connecting to your database."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"models"),": Set the value to match the name of your project."))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("strong",{parentName:"p"},"Check dbt configuration"),": Run the following command to check the dbt configuration:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},"dbt debug --config-dir\n")),(0,o.kt)("p",{parentName:"li"},"This command verifies the configuration directory and displays information about your dbt setup."),(0,o.kt)("p",{parentName:"li"},"cd to the ",(0,o.kt)("inlineCode",{parentName:"p"},".dbt")," path (PosixPath) specified in the output of above command to view profiles.yml file."))),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Understanding the .dbt/profiles.yml Configuration File")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},".dbt/profiles.yml")," file is a configuration file used by dbt (Data Build Tool) to specify various settings and parameters for your dbt project. It is written in YAML (YAML Ain't Markup Language) format, which is a human-readable data serialization format."),(0,o.kt)("p",null,"Here's an explanation of the key sections and parameters found in the ",(0,o.kt)("inlineCode",{parentName:"p"},".dbt/profiles.yml")," file:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"project_name"),": Specifies the name of your dbt project. This is a user-defined name that identifies your project.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"outputs"),": Defines the different output configurations for your project, such as different database connections or target environments. Each output configuration is specified as a separate block under ",(0,o.kt)("inlineCode",{parentName:"p"},"outputs"),".")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"dev")," (example output configuration): Represents a specific output configuration, such as a development environment. It contains various parameters for the connection to the target database, including ",(0,o.kt)("inlineCode",{parentName:"p"},"account"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"database"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"password"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"role"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"schema"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"threads"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"type"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"user"),", and ",(0,o.kt)("inlineCode",{parentName:"p"},"warehouse"),". These parameters should be customized based on your specific setup.")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("p",{parentName:"li"},(0,o.kt)("inlineCode",{parentName:"p"},"target"),": Specifies the target environment to use for dbt commands. In this example, the target is set to ",(0,o.kt)("inlineCode",{parentName:"p"},"dev"),", which corresponds to the ",(0,o.kt)("inlineCode",{parentName:"p"},"dev")," output configuration defined above."))),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},".dbt/profiles.yml")," file allows you to define multiple output configurations and switch between them using the ",(0,o.kt)("inlineCode",{parentName:"p"},"target")," parameter. This flexibility enables you to easily work with different environments, such as development, staging, and production, without modifying your dbt code."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Project_name:\n    outputs:\n    dev:\n        account: Account\n        client_session_keep_alive: false\n        database: DBNAME\n        password: PASSWORD\n        role: ROLE\n        schema: SCHEMA\n        threads: 8\n        type: snowflake\n        user: USERNAME\n        warehouse: WAREHOUSE\n    target: dev\n")),(0,o.kt)("p",null,"To set up your local dbt project, you need to:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Install dbt and its dependencies as mentioned in the previous instructions."),(0,o.kt)("li",{parentName:"ol"},"Create a new project using the ",(0,o.kt)("inlineCode",{parentName:"li"},"dbt init project_name")," command."),(0,o.kt)("li",{parentName:"ol"},"Open the generated ",(0,o.kt)("inlineCode",{parentName:"li"},".dbt/profiles.yml")," file and update the ",(0,o.kt)("inlineCode",{parentName:"li"},"project_name")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"outputs")," sections based on your project and database configuration."),(0,o.kt)("li",{parentName:"ol"},"Customize the parameters under the desired output configuration (e.g., ",(0,o.kt)("inlineCode",{parentName:"li"},"dev"),") to match your database connection details."),(0,o.kt)("li",{parentName:"ol"},"Save the ",(0,o.kt)("inlineCode",{parentName:"li"},".dbt/profiles.yml")," file and ensure it is placed in the root directory of your dbt project."),(0,o.kt)("li",{parentName:"ol"},"Run the ",(0,o.kt)("inlineCode",{parentName:"li"},"dbt debug --config-dir")," command to verify the configuration and check the configuration directory of the ",(0,o.kt)("inlineCode",{parentName:"li"},".dbt")," file.")),(0,o.kt)("p",null,"By properly configuring the ",(0,o.kt)("inlineCode",{parentName:"p"},".dbt/profiles.yml")," file, you can ensure that dbt connects to the correct database and executes your models and transformations in the desired environment."),(0,o.kt)("p",null,"You have now set up dbt locally and configured your project.\nYou can start building your dbt models and transformations using SQL queries.\nRefer to the dbt documentation for further guidance on using dbt for data transformation and modeling."))}m.isMDXComponent=!0}}]);