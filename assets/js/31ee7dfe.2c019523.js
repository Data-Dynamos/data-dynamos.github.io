"use strict";(self.webpackChunkdata_dynamos_github_io=self.webpackChunkdata_dynamos_github_io||[]).push([[9941],{3905:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>g});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),p=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(r),d=n,g=u["".concat(s,".").concat(d)]||u[d]||m[d]||o;return r?a.createElement(g,i(i({ref:t},c),{},{components:r})):a.createElement(g,i({ref:t},c))}));function g(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:n,i[1]=l;for(var p=2;p<o;p++)i[p]=r[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3884:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var a=r(7462),n=(r(7294),r(3905));const o={sidebar_position:6},i="Exercise 3",l={unversionedId:"data-transformation/SQL/Exercise-3",id:"data-transformation/SQL/Exercise-3",title:"Exercise 3",description:"Create View for Aggregate Global Temperatures",source:"@site/docs/data-transformation/SQL/Exercise-3.mdx",sourceDirName:"data-transformation/SQL",slug:"/data-transformation/SQL/Exercise-3",permalink:"/docs/data-transformation/SQL/Exercise-3",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/data-transformation/SQL/Exercise-3.mdx",tags:[],version:"current",sidebarPosition:6,frontMatter:{sidebar_position:6},sidebar:"tutorialSidebar",previous:{title:"Exercise 2",permalink:"/docs/data-transformation/SQL/Exercise-2"},next:{title:"Exercise 4",permalink:"/docs/data-transformation/SQL/Exercise-4"}},s={},p=[{value:"Create View for Aggregate Global Temperatures",id:"create-view-for-aggregate-global-temperatures",level:2}],c={toc:p},u="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"exercise-3"},"Exercise 3"),(0,n.kt)("h2",{id:"create-view-for-aggregate-global-temperatures"},"Create View for Aggregate Global Temperatures"),(0,n.kt)("p",null,"To analyze temperature measurements globally on an annual basis, you will create a view called ",(0,n.kt)("inlineCode",{parentName:"p"},"aggregate_global_temperatures")," based on the ",(0,n.kt)("inlineCode",{parentName:"p"},"stg_global_temperatures")," table in the ",(0,n.kt)("inlineCode",{parentName:"p"},"global_temperatures")," schema . This view will group the data by year and provide aggregated temperature values using the appropriate aggregation functions."),(0,n.kt)("p",null,"To create the view and extract the desired columns:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Select the ",(0,n.kt)("inlineCode",{parentName:"li"},"Date"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"LandAverageTemperature"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"LandMaxTemperature"),", ",(0,n.kt)("inlineCode",{parentName:"li"},"LandMinTemperature"),", and ",(0,n.kt)("inlineCode",{parentName:"li"},"LandAndOceanAverageTemperature")," columns from the ",(0,n.kt)("inlineCode",{parentName:"li"},"stg_global_temperatures")," table."),(0,n.kt)("li",{parentName:"ol"},"Extract the year from the ",(0,n.kt)("inlineCode",{parentName:"li"},"Date")," column to obtain only the year portion of the date."),(0,n.kt)("li",{parentName:"ol"},"Apply the suitable aggregation functions, such as ",(0,n.kt)("inlineCode",{parentName:"li"},"AVG")," for average temperature, to calculate the desired values for each year."),(0,n.kt)("li",{parentName:"ol"},"Ignore any 'Uncertainty' columns for this project.")),(0,n.kt)("p",null,"The resulting view should have the following columns:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"Year: Integer"),(0,n.kt)("li",{parentName:"ul"},"LandAverageTemperature: Float"),(0,n.kt)("li",{parentName:"ul"},"LandMaxTemperature: Float"),(0,n.kt)("li",{parentName:"ul"},"LandMinTemperature: Float"),(0,n.kt)("li",{parentName:"ul"},"LandAndOceanAverageTemperature: Float")),(0,n.kt)("admonition",{type:"note"},(0,n.kt)("p",{parentName:"admonition"},"Note data 2022-01-19 try to extract 2022 alone")))}m.isMDXComponent=!0}}]);